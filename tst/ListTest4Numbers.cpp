//
// Created by Christofer Chaves on 6/10/2022.
//

#include <LinkedList.h>
#include "gtest/gtest.h"

/**
 * This test check the LinkedList methods
 */
TEST(ListTestSuite, factorial1) {

    LinkedList<Array<AlmacenaNum>> lista = LinkedList<Array<AlmacenaNum>>::addFactorialToLinkedList(1000,4);
    lista.flipLinkedList();

    ASSERT_EQ(lista.toString(),"|[4023][8726][077]|-->|[7354][3702][4339]|-->|[3985][7193][7486]|-->|[7146][3254][3799]|-->|[2993][8512][3986]|-->|[592]"
                               "[442][848]|-->|[4048][047][9988]|-->|[9719][6058][6316]|-->|[2994][8085][5890]|-->|[8296][6994][4590]|-->|[2450][4087][7"
                               "37]|-->|[8823][6277][2718]|-->|[5197][7950][5950]|-->|[7612][874][9754]|-->|[7043][6014][1827]|-->|[6464][9629][1056]|--"
                               ">|[8743][7886][4873]|-->|[9181][458][2578]|-->|[8499][7701][2476]|-->|[8983][5955][7354]|-->|[3185][3239][5846]|-->|[557"
                               "4][911][4262]|-->|[7434][9347][5534]|-->|[6576][6116][6779]|-->|[6688][2029][1207]|-->|[4385][3719][5882]|-->|[8126][867"
                               "8][3837]|-->|[7317][4613][6085]|-->|[3452][4221][5865]|-->|[1928][908][7829]|-->|[4313][9284][4403]|-->|[3155][8611][369"
                               "]|-->|[1357][3042][1616]|-->|[6096][7587][1348]|-->|[2547][8589][3207]|-->|[9132][4484][2623]|-->|[4125][878][208]|-->|["
                               "6168][3151][273]|-->|[7977][7047][8463]|-->|[1701][6436][5024]|-->|[9139][8281][2648]|-->|[3092][7612][4489]|-->|[9287]["
                               "511][4964]|-->|[1990][9342][2215]|-->|[2572][808][2133]|-->|[1168][1155][3615]|-->|[4698][4046][7089]|-->|[2900][9505][3"
                               "761]|-->|[8477][2842][1889]|-->|[4624][4945][1607]|-->|[3408][1989][138]|-->|[4879][8495][9953]|-->|[172][3355][5566]|--"
                               ">|[9450][3997][3628]|-->|[1378][3761][5307]|-->|[6192][6849][343]|-->|[5200][158][8853]|-->|[3316][1170][2103]|-->|[7592"
                               "][1510][9077]|-->|[9393][1781][1419]|-->|[2572][2386][5541]|-->|[6289][2187][9602]|-->|[8971][4760][8850]|-->|[8629][671"
                               "4][6674]|-->|[6291][1234][824]|-->|[8160][1537][8088]|-->|[9645][1826][3243]|-->|[1676][2179][1689]|-->|[9911][9037][540"
                               "3]|-->|[6222][8998][8005]|-->|[4441][4282][121]|-->|[1745][9926][4295]|-->|[7466][2830][2955]|-->|[9902][4324][1531]|-->"
                               "|[7210][4658][3203]|-->|[9061][1726][158]|-->|[2075][1516][2842]|-->|[265][1704][8330]|-->|[1439][7428][6933]|-->|[9089]"
                               "[7968][4825]|-->|[5458][3271][6822]|-->|[665][2676][9958]|-->|[8227][2807][757]|-->|[1858][1788][8965]|-->|[1643][4834]["
                               "4825]|-->|[6604][3367][6601]|-->|[9612][8318][6078]|-->|[1502][7946][5955]|-->|[5655][2036][939]|-->|[612][1385][5860]|-"
                               "->|[4356][9452][7224]|-->|[4463][1797][4605]|-->|[2573][1037][9008]|-->|[4324][3846][5657]|-->|[1440][2821][8852]|-->|[9"
                               "35][1906][2092]|-->|[1364][9327][3497]|-->|[1395][8720][5596]|-->|[8749][7740][1141]|-->|[9627][1542][2845]|-->|[7738][7"
                               "538][2304]|-->|[5688][9764][6192]|-->|[8149][014][767]|-->|[4664][259][8994]|-->|[2221][7659][433]|-->|[8860][1856][6526"
                               "]|-->|[6179][9702][3561]|-->|[7017][8600][4081]|-->|[7299][1831][1021]|-->|[2984][5901][6419]|-->|[8884][3871][2185]|-->"
                               "|[1249][6079][8722]|-->|[1929][6819][3723]|-->|[2614][8396][5738]|-->|[1231][2502][4186]|-->|[5314][3970][1374]|-->|[192"
                               "6][6498][7533]|-->|[9406][9428][1434]|-->|[2015][8014][1233]|-->|[8015][513][9969]|-->|[1534][8307][7644]|-->|[9907][315"
                               "2][4332]|-->|[8269][8646][278]|-->|[3211][3908][3506]|-->|[9500][2597][3898]|-->|[4277][1967][4282]|-->|[7575][8676][575"
                               "2]|-->|[2020][7573][6305]|-->|[8825][879][6892]|-->|[7538][4886][3396]|-->|[5982][6280][9561]|-->|[994][8717][124]|-->|["
                               "4612][6037][9029]|-->|[2088][9086][9420]|-->|[640][1821][5439]|-->|[1568][594][1872]|-->|[9809][4254][7421]|-->|[2401][6"
                               "36][7740]|-->|[7417][8516][829]|-->|[3535][8081][8400]|-->|[6372][5242][3056]|-->|[9037][062][4271]|-->|[1690][9004][153"
                               "6]|-->|[5933][9838][3577]|-->|[4109][7002][7753]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][0"
                               "00][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][0"
                               "00][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][000][000]|-->|[000][0"
                               "00][000]|-->NULL");
}

TEST(ListTestSuite, fibonnacci1) {

    LinkedList<Array<AlmacenaNum>> lista = LinkedList<Array<AlmacenaNum>>::addFibonnacciToLinkedList(1000,4);
    lista.flipLinkedList();
    ASSERT_EQ(lista.toString(), "|[4346][6557][6869]|-->|[6435][6885][2767]|-->|[6258][256][4660]|-->|[7178][402][4817]|-->|[9536][5554][1794]|-->|[8904]"
                                "[387][9840]|-->|[5516][9295][9225]|-->|[322][6347][7520]|-->|[6232][3987][3322]|-->|[6164][2996][4409]|-->|[3187][9382]["
                                "9896]|-->|[9285][1600][3704]|-->|[3779][5166][8492]|-->|[005][000][000]|-->NULL");
}

TEST(ListTestSuite, combinatoria) {

    LinkedList<Array<AlmacenaNum>> lista = LinkedList<Array<AlmacenaNum>>::addCombinationalToLinkedList(1000,350,4);
    lista.flipLinkedList();
    ASSERT_EQ(lista.toString(), "|[4025][3081][6202]|-->|[5163][8682][9527]|-->|[5000][1659][3918]|-->|[9037][6422][3880]|-->|[8107][2522][9506]|-->|[753"
                                "9][1454][3653]|-->|[7545][6325][2405]|-->|[9667][7310][6522]|-->|[4937][3714][2353]|-->|[9191][3023][827]|-->|[3314][269"
                                "9][7019]|-->|[7660][8713][9200]|-->|[5973][9472][128]|-->|[4999][3173][2738]|-->|[8096][5735][1004]|-->|[6141][6257][617"
                                "4]|-->|[1672][9426][3379]|-->|[8432][9840][000]|-->NULL");
}


TEST(ListTestSuite, combinatoria4) {

    LinkedList<Array<AlmacenaNum>> lista = LinkedList<Array<AlmacenaNum>>::addCombinationalToLinkedList(1000,650,4);
    lista.flipLinkedList();
    ASSERT_EQ(lista.toString(), "|[4025][3081][6202]|-->|[5163][8682][9527]|-->|[5000][1659][3918]|-->|[9037][6422][3880]|-->|[8107][2522][9506]|-->|[753"
                                "9][1454][3653]|-->|[7545][6325][2405]|-->|[9667][7310][6522]|-->|[4937][3714][2353]|-->|[9191][3023][827]|-->|[3314][269"
                                "9][7019]|-->|[7660][8713][9200]|-->|[5973][9472][128]|-->|[4999][3173][2738]|-->|[8096][5735][1004]|-->|[6141][6257][617"
                                "4]|-->|[1672][9426][3379]|-->|[8432][9840][000]|-->NULL");
}


TEST(ListTestSuite, combinatoria5) {

    LinkedList<Array<AlmacenaNum>> lista = LinkedList<Array<AlmacenaNum>>::addCombinationalToLinkedList(1000,500,4);
    lista.flipLinkedList();
    ASSERT_EQ(lista.toString(), "|[2702][8824][945]|-->|[6951][5614][6936]|-->|[5275][4961][5200]|-->|[5482][8700][7392]|-->|[662][5428][7055]|-->|[3898]"
                                "[6124][8392]|-->|[3701][6536][2606]|-->|[2154][6104][8022]|-->|[050][6799][1754]|-->|[2196][9951][8475]|-->|[6548][4263]"
                                "[7517]|-->|[6162][4640][7973]|-->|[3443][6457][4161]|-->|[9760][4571][449]|-->|[6287][8805][1460]|-->|[2194][2675][2366]"
                                "|-->|[5660][3136][8626]|-->|[4428][1092][9690]|-->|[7998][2121][6320]|-->NULL");
}